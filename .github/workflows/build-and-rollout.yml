name: Build and Rollout
on:
  push:
    branches:
      - main

jobs:
  main:
    name: Main
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build with Gradle
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: build -x lint
      
      - name: Run unit tests
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: test

      - name: Delete current latest tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME="latest"
          RELEASE_ID=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" "https://api.github.com/repos/${{ github.repository }}/releases/tags/$TAG_NAME" | jq -r '.id')
          if [[ -n "$RELEASE_ID" && "$RELEASE_ID" != "null" ]]; then
            curl -X DELETE -H "Authorization: Bearer $GITHUB_TOKEN" "https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID"
            echo "Release $TAG_NAME has been deleted."
          else
            echo "Release $TAG_NAME does not exist."
          fi

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
          body: |
            This release was automatically created by `build-and-rollout` workflow.
      
      - name: Upload debug apk file to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/build/outputs/apk/debug/app-debug.apk
          asset_name: com.example.debtdomino-latest-Debug.apk
          asset_content_type: application/vnd.android.package-archive
      
      - name: Upload release apk file to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/build/outputs/apk/release/app-release-unsigned.apk
          asset_name: com.example.debtdomino-latest-Release-unsigned.apk
          asset_content_type: application/vnd.android.package-archive